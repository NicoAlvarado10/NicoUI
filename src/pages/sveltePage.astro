---
import Layout from "@/layouts/Layout.astro";
import ComponentsLayout from "@/layouts/ComponentsLayout.astro";
import DocsLayout from "@/layouts/DocsLayout.astro";
import Alert from "@/components/shared/alert/Alert.astro";
import {PrimaryButton, SecondaryButton, ThirdButton} from "@/components/shared/button/index.astro"
import {PrimaryCard, SecondaryCard, ThirdCard} from "@/components/shared/card/index.astro"
import {PrimaryInput, SecondaryInput} from "@/components/shared/input/index.astro"
import {PrimaryForm, SecondaryForm, ThirdForm} from "@/components/shared/form/index.astro"
import {PrimaryTable, SecondaryTable} from "@/components/shared/table/index.astro"
import {PrimaryAccordion, SecondaryAccordion} from "@/components/shared/accordion/index.astro"
import Checkbox from "@/components/shared/checkbox/Checkbox.astro";

const buttonPrimarySvelte = `
<script>
  export let label = 'Boton';
</script>

<button
  class="bg-black text-white font-semibold py-2 px-4 rounded-lg transition duration-200 border border-gray-600 hover:opacity-95 focus:outline-none focus:ring-2 focus:ring-gray-500"
  aria-label="Boton"
>
  {label}
</button>



`;
const buttonSecondarySvelte = `
<button
  class="bg-gray-700 text-white font-semibold py-2 px-4 rounded-lg border border-gray-600 hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500 transition duration-200"
  aria-label="Boton Secondary"
>
  <slot></slot>
</button>

`;
const buttonWarningSvelte = `
<button
  class="bg-red-600 text-white font-semibold py-2 px-4 rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-300 transition duration-200"
  aria-label="Boton Warning"
>
  <slot></slot>
</button>


`;

const primaryCardSvelte = `
<article class="flex flex-col rounded-lg py-3 transition duration-150 shadow-lg hover:shadow-2xl">
  <div class="flex items-center gap-4 bg-rose-500 py-4 px-3">
    <span class="py-2 px-3 rounded-full border-solid border-white bg-white">
      <i class="ri-user-fill text-slate-400 text-xl"></i>
    </span>
    <div>
      <h3 class="text-white font-bold">Jane Doe</h3>
      <p class="text-white">Diseñadora UI/UX</p>
    </div>
  </div>
  <div class="p-3 flex flex-col gap-2">
    <p class="text-slate-600">Creando experiencias de usuario intuitivas y atractivas.</p>
    <ul class="flex items-center gap-4">
      <li><span class="font-bold text-sm">UI/UX</span></li>
      <li><span class="font-bold text-sm">Figma</span></li>
      <li><span class="font-bold text-sm">Sketch</span></li>
    </ul>
  </div>
  <div class="py-2 px-4 flex items-center justify-between">
    <a class="bg-slate-300 cursor-pointer py-2 px-4 rounded-md transition duration-150 hover:bg-slate-400">Ver perfil</a>
    <a class="bg-neutral-950 text-white py-2 px-4 rounded-md transition duration-150 hover:bg-neutral-900" href="#">Conectar</a>
  </div>
</article>

`;
const secondaryCardSvelte = `
<article class="flex flex-col w-96 rounded-2xl gap-2 shadow-xl py-4 transition duration-150 hover:shadow-2xl">
  <img src="/React.svg" alt="react-svg" class="bg-slate-200 w-full h-52" />
  <div class="flex px-3 items-center gap-3 pt-2">
    <span class="text-base font-bold">Tecnologia</span>
    <span class="text-sm text-slate-500">Lectura 5 min</span>
  </div>
  <div class="flex flex-col gap-1 px-3">
    <h3 class="text-2xl font-semibold">El futuro de la IA en el desarrollo web</h3>
    <p class="text-slate-600">Descubre cómo la inteligencia artificial está transformando la manera en que diseñamos y desarrollamos sitios web.</p>
  </div>
  <div class="flex justify-between px-3">
    <span class="flex gap-2 items-center text-sm"><i class="ri-user-fill"></i>Por Alex Brown</span>
    <a href="#" class="text-cyan-500 transition duration-150 hover:underline font-bold">Leer más</a>
  </div>
</article>


`;
const thirdCardSvelte = `
<article class="flex flex-col w-96 rounded-2xl gap-2 shadow-xl py-4 transition duration-150 hover:shadow-2xl">
  <img src="/React.svg" alt="react-svg" class="bg-slate-200 w-full h-52" />
  <div class="flex px-3 items-center gap-3 pt-2">
    <span class="text-base font-bold">Tecnologia</span>
    <span class="text-sm text-slate-500">Lectura 5 min</span>
  </div>
  <div class="flex flex-col gap-1 px-3">
    <h3 class="text-2xl font-semibold">El futuro de la IA en el desarrollo web</h3>
    <p class="text-slate-600">Descubre cómo la inteligencia artificial está transformando la manera en que diseñamos y desarrollamos sitios web.</p>
  </div>
  <div class="flex justify-between px-3">
    <span class="flex gap-2 items-center text-sm"><i class="ri-user-fill"></i>Por Alex Brown</span>
    <a href="#" class="text-cyan-500 transition duration-150 hover:underline font-bold">Leer más</a>
  </div>
</article>



`;

const primaryInputSvelte = `
<script>
  let email = '';

  // Opcional: para verificar el valor actualizado en la consola
  $: console.log(email);
</script>

<div class="space-y-2 w-full max-w-md">
  <label for="email" class="block font-medium text-gray-700">Email</label>
  <input
    type="email"
    id="email"
    placeholder="Enter your email"
    class="block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 border-gray-300 focus:ring-blue-500"
    bind:value={email}
  />
</div>


`;
const secondaryInputSvelte = `
<script>
  let showPassword = false;

  function togglePasswordVisibility() {
    showPassword = !showPassword;
  }
</script>

<div class="space-y-2 w-full max-w-md">
  <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
  <div class="relative">
    <input
      type={showPassword ? 'text' : 'password'}
      id="password"
      placeholder="Enter your password"
      class="block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 border-gray-300 focus:ring-blue-500"
    />
    <button
      type="button"
      class="absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent"
      on:click={togglePasswordVisibility}
      aria-label={showPassword ? 'Hide password' : 'Show password'}
    >
      <i class={showPassword ? 'ri-eye-off-line h-4 w-4' : 'ri-eye-line h-4 w-4'} aria-hidden="true"></i>
    </button>
  </div>
</div>

`;

const primaryAlertSvelte = `
<div class="flex items-center p-3 rounded-2xl bg-blue-100 text-blue-700" role="alert">
  <i class="ri-information-line mr-2"></i>
  <span>This is an informational alert message.</span>
</div>


`;

const primaryFormSvelte = `
<script>
  let email = '';
  let password = '';

  function handleSubmit() {
    console.log('Email:', email);
    console.log('Password:', password);
    // Aquí se maneja la lógica de inicio de sesión
  }
</script>

<div class="w-full max-w-xs mx-auto border rounded p-4 transition duration-150 shadow-xl hover:shadow-2xl">
  <h2 class="text-xl font-bold mb-2">Login</h2>
  <p class="text-gray-600 mb-4 max-sm:text-base">Enter your credentials to access your account</p>
  <form class="space-y-4" on:submit|preventDefault={handleSubmit}>
    <div class="space-y-2">
      <label for="email" class="block font-medium">Email</label>
      <div class="relative">
        <i class="ri-mail-line absolute left-3 top-3 text-gray-400"></i>
        <input
          id="email"
          type="email"
          bind:value={email}
          placeholder="Enter your email"
          class="w-full pl-10 p-2 border rounded"
          required
        />
      </div>
    </div>
    <div class="space-y-2">
      <label for="password" class="block font-medium">Password</label>
      <div class="relative">
        <i class="ri-lock-line absolute left-3 top-3 text-gray-400"></i>
        <input
          id="password"
          type="password"
          bind:value={password}
          placeholder="Enter your password"
          class="w-full pl-10 p-2 border rounded"
          required
        />
      </div>
    </div>
    <button
      type="submit"
      class="w-full bg-blue-500 transition duration-150 hover:bg-blue-700 text-white p-2 rounded mt-4"
    >
      Log In
    </button>
  </form>
</div>


`;
const secondaryFormSvelte = `
<script>
  let name = '';
  let message = '';

  function handleSubmit() {
    console.log('Name:', name);
    console.log('Message:', message);
    // Aquí se maneja la lógica de envío del formulario
  }
</script>

<div class="w-full max-w-2xl mx-auto border rounded p-4 shadow-xl hover:shadow-2xl">
  <h2 class="text-xl font-bold mb-2">Contact Us</h2>
  <p class="text-gray-600 mb-4">Send us a message and we will get back to you as soon as possible</p>
  <form class="space-y-4" on:submit|preventDefault={handleSubmit}>
    <div class="space-y-2">
      <label for="name" class="block font-medium">Name</label>
      <div class="relative">
        <i class="ri-user-line absolute left-3 top-3 text-gray-400"></i>
        <input
          id="name"
          type="text"
          bind:value={name}
          placeholder="Enter your name"
          class="w-full pl-10 p-2 border rounded"
          required
        />
      </div>
    </div>
    <div class="space-y-2">
      <label for="message" class="block font-medium">Message</label>
      <textarea
        id="message"
        bind:value={message}
        placeholder="Type your message here"
        class="w-full p-2 border rounded"
        required
      ></textarea>
    </div>
    <button
      type="submit"
      class="w-full bg-blue-500 transition duration-150 hover:bg-blue-700 text-white p-2 rounded mt-4"
    >
      <i class="ri-send-plane-line mr-2"></i>
      Send Message
    </button>
  </form>
</div>


`;
const thirdFormSvelte = `
<script>
  let plan = 'basic'; // Default selected plan

  function handleSubmit() {
    console.log('Selected Plan:', plan);
    // Aquí se maneja la lógica de envío del formulario
  }
</script>

<div class="w-full shadow-xl hover:shadow-2xl max-w-md mx-auto border rounded p-4">
  <h2 class="text-xl font-bold mb-2">Subscribe to Our Newsletter</h2>
  <p class="text-gray-600 mb-4">Stay updated with our latest news</p>
  <form class="space-y-4" on:submit|preventDefault={handleSubmit}>
    <label class="block font-medium">Choose your plan</label>
    <div class="space-y-2">
      <label class="flex items-center">
        <input
          type="radio"
          name="plan"
          value="basic"
          bind:group={plan}
          class="mr-2"
          required
        />
        Basic
      </label>
      <label class="flex items-center">
        <input
          type="radio"
          name="plan"
          value="premium"
          bind:group={plan}
          class="mr-2"
          required
        />
        Premium
      </label>
      <label class="flex items-center">
        <input
          type="radio"
          name="plan"
          value="pro"
          bind:group={plan}
          class="mr-2"
          required
        />
        Pro
      </label>
    </div>
    <button
      type="submit"
      class="w-full transition duration-150 hover:bg-blue-700 bg-blue-500 text-white p-2 rounded mt-4"
    >
      <i class="ri-check-line mr-2"></i>
      Subscribe
    </button>
  </form>
</div>


`;

const primaryTableSvelte = `

<div class="overflow-x-auto bg-white shadow-md rounded-lg">
  <table class="min-w-full text-sm text-left text-gray-600">
    <thead class="bg-gray-200">
      <tr>
        <th class="px-6 py-3">#</th>
        <th class="px-6 py-3">Name</th>
        <th class="px-6 py-3">Age</th>
        <th class="px-6 py-3">Country</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="px-6 py-3">1</td>
        <td class="px-6 py-3">John Doe</td>
        <td class="px-6 py-3">25</td>
        <td class="px-6 py-3">USA</td>
      </tr>
      <tr class="bg-gray-50">
        <td class="px-6 py-3">2</td>
        <td class="px-6 py-3">Jane Smith</td>
        <td class="px-6 py-3">30</td>
        <td class="px-6 py-3">Canada</td>
      </tr>
    </tbody>
  </table>
</div>

`;
const secondaryTableSvelte = `

<div class="overflow-x-auto bg-white shadow-md rounded-lg">
  <table class="min-w-full text-sm text-left text-gray-600">
    <thead class="bg-gray-200">
      <tr>
        <th class="px-6 py-3">#</th>
        <th class="px-6 py-3">Name</th>
        <th class="px-6 py-3">Age</th>
        <th class="px-6 py-3">Country</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="px-6 py-3">1</td>
        <td class="px-6 py-3">John Doe</td>
        <td class="px-6 py-3">25</td>
        <td class="px-6 py-3">USA</td>
      </tr>
      <tr class="bg-gray-50">
        <td class="px-6 py-3">2</td>
        <td class="px-6 py-3">Jane Smith</td>
        <td class="px-6 py-3">30</td>
        <td class="px-6 py-3">Canada</td>
      </tr>
    </tbody>
  </table>
</div>


`;

const primaryAccordionSvelte = `

<div class="w-full border border-gray-300 rounded-lg bg-black py-2 px-4">
  <details class="faq-border mb-4 pb-2 group max-lg:px-5">
    <summary
      class="text-white cursor-pointer flex justify-between items-center group-hover:underline"
    >
      ¿Puedo usar esto en mi proyecto?
      <span class="ml-2">
        <svg
          class="w-4 h-4 transition-transform group-open:rotate-90"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"
          />
        </svg>
      </span>
    </summary>
    <p class="text-white pt-5">
      Sí. Es de uso gratuito para proyectos personales y comerciales. No se
      requiere atribución.
    </p>
  </details>

  <details class="faq-border mb-4 pb-2 group max-lg:px-5">
    <summary
      class="text-white cursor-pointer flex justify-between items-center group-hover:underline"
    >
      ¿Por qué no lo publicas como paquete npm?
      <span class="ml-2">
        <svg
          class="w-4 h-4 transition-transform group-open:rotate-90"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"
          />
        </svg>
      </span>
    </summary>
    <p class="text-white pt-5">
      La idea detrás de esto es darle propiedad y control sobre el código,
      permitiéndole decidir cómo se construyen y diseñan los componentes.
    </p>
  </details>

  <details class="faq-border mb-4 pb-2 group max-lg:px-5">
    <summary
      class="text-white cursor-pointer flex justify-between items-center group-hover:underline"
    >
      ¿Qué frameworks son compatibles?
      <span class="ml-2">
        <svg
          class="w-4 h-4 transition-transform group-open:rotate-90"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"
          />
        </svg>
      </span>
    </summary>
    <p class="text-white pt-5">
      Puedes usarlo en cualquiera, React, Astro, Angular, Vue, etc.
    </p>
  </details>
</div>

`;
const secondaryAccordionSvelte = `
<div class="w-full">
  <details class="mb-2">
    <summary
      class="cursor-pointer px-4 py-2 font-medium bg-blue-600 text-white rounded-t-lg hover:bg-blue-700 flex items-center"
    >
      <i class="ri-edit-2-line mr-2"></i>
      Custom Header 1
    </summary>
    <div class="px-4 py-2 bg-gray-100 text-gray-800 rounded-b-lg">
      This accordion has custom styling applied to it.
    </div>
  </details>

  <details class="mb-2">
    <summary
      class="cursor-pointer px-4 py-2 font-medium bg-blue-600 text-white rounded-t-lg hover:bg-blue-700 flex items-center"
    >
      <i class="ri-settings-2-line mr-2"></i>
      Custom Header 2
    </summary>
    <div class="px-4 py-2 bg-gray-100 text-gray-800 rounded-b-lg">
      You can customize the colors, padding, and other styles.
    </div>
  </details>

  <details>
    <summary
      class="cursor-pointer px-4 py-2 font-medium bg-blue-600 text-white rounded-t-lg hover:bg-blue-700 flex items-center"
    >
      <i class="ri-lightbulb-line mr-2"></i>
      Custom Header 3
    </summary>
    <div class="px-4 py-2 bg-gray-100 text-gray-800 rounded-b-lg">
      This demonstrates how flexible the accordion component can be.
    </div>
  </details>
</div>


`;
const checkboxSvelte = `
<script>
  export let id = "exampleCheckbox";
</script>

<div class="bg-black flex items-center space-x-2 p-2 rounded">
  <input
    type="checkbox"
    id={id}
    name="example"
    class="peer"
  />
  <label
    for={id}
    class="text-sm text-white font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
  >
    Accept terms and conditions
  </label>
</div>


`;


---

<Layout title="NicoUI | Svelte">
    <section class="max-w-7xl m-auto pt-24 max-xl:px-5 max-sm:px-0 ">

      <aside class="float-left mt-8 fixed h-full top-26 max-xl:hidden ">
        <ul class="flex flex-col gap-2">
            <li><a class="text-gray-400 transition duration-150 hover:text-white" href="#buttonSvelte">Button</a></li>
            <li><a class="text-gray-400 transition duration-150 hover:text-white" href="#cardSvelte">Card</a></li>
            <li><a class="text-gray-400 transition duration-150 hover:text-white" href="#inputSvelte">Input</a></li>
            <li><a class="text-gray-400 transition duration-150 hover:text-white" href="#alertSvelte">Alert</a></li>
            <li><a class="text-gray-400 transition duration-150 hover:text-white" href="#formSvelte">Form</a></li>
            <li><a class="text-gray-400 transition duration-150 hover:text-white" href="#tableSvelte">Table</a></li>
            <li><a class="text-gray-400 transition duration-150 hover:text-white" href="#acordionSvelte">Accordion</a></li>
            <li><a class="text-gray-400 transition duration-150 hover:text-white" href="#checkboxSvelte">Checkbox</a></li>
        </ul>
    </aside>

        <DocsLayout
          guia="npx degit sveltejs/template nombre-del-proyecto"
          framework="Svelte"
          icon="ri-svelte-line"
          anteriorPage="/docs"
        />

        <section class="flex flex-col justify-center max-w-4xl m-auto gap-4 mt-24 scroll-mt-48 max-sm:px-3"  id="buttonSvelte" >
            <h2 class="text-white text-2xl font-semibold pb-5 ">Botones</h2>
            <ComponentsLayout  Component={PrimaryButton} Copy={buttonPrimarySvelte} Code={buttonPrimarySvelte}/>          
           <ComponentsLayout  Component={SecondaryButton} Copy={buttonSecondarySvelte}  Code={buttonSecondarySvelte}/>
           <ComponentsLayout  Component={ThirdButton} Copy={buttonWarningSvelte} Code={buttonWarningSvelte}/>
        </section>
  
        <section class="flex flex-col justify-center max-w-4xl m-auto gap-4 mt-24 max-sm:px-3" id="cardSvelte">
            <h2 class="text-white text-2xl font-semibold pb-5">Cards</h2>
           <ComponentsLayout  Component={PrimaryCard } Code={primaryCardSvelte} Copy={primaryCardSvelte}/>
           <ComponentsLayout  Component={SecondaryCard} Code={secondaryCardSvelte} Copy={secondaryCardSvelte}/>
           <ComponentsLayout  Component={ThirdCard} Code={thirdCardSvelte} Copy={thirdCardSvelte}/>
          </section>
  
          <section class="flex flex-col justify-center max-w-4xl m-auto gap-4 mt-24 max-sm:px-3" id="inputSvelte">
            <h2 class="text-white text-2xl font-semibold pb-5">Inputs</h2>
           <ComponentsLayout  Component={PrimaryInput } Code={primaryInputSvelte} Copy={primaryInputSvelte}/>
           <ComponentsLayout  Component={SecondaryInput} Code={secondaryInputSvelte} Copy={secondaryInputSvelte}/>
          
          </section>

          <section class="flex flex-col justify-center max-w-4xl m-auto gap-4 mt-24 max-sm:px-3" id="alertSvelte">
            <h2 class="text-white text-2xl font-semibold pb-5">Alert</h2>
           <ComponentsLayout  Component={Alert } Code={primaryAlertSvelte} Copy={primaryAlertSvelte}/>
          
          </section>
  
          <section class="flex flex-col justify-center max-w-4xl m-auto gap-4 mt-24 max-sm:px-3" id="formSvelte">
            <h2 class="text-white text-2xl font-semibold pb-5">Forms</h2 >
           <ComponentsLayout  Component={PrimaryForm } Code={primaryFormSvelte} Copy={primaryFormSvelte}/>
           <ComponentsLayout  Component={SecondaryForm } Code={secondaryFormSvelte} Copy={secondaryFormSvelte}/>
           <ComponentsLayout  Component={ThirdForm } Code={thirdFormSvelte} Copy={thirdFormSvelte}/>
          
          </section>

          <section class="flex flex-col justify-center max-w-4xl m-auto gap-4 mt-24 max-sm:px-3" id="tableSvelte">
            <h2 class="text-white text-2xl font-semibold pb-5">Tables</h2>
           <ComponentsLayout  Component={PrimaryTable } Code={primaryTableSvelte} Copy={primaryTableSvelte}/>
           <ComponentsLayout  Component={SecondaryTable } Code={secondaryTableSvelte} Copy={secondaryTableSvelte}/>
       
          
          </section>
          <section class="flex flex-col justify-center max-w-4xl m-auto gap-4 mt-24 max-sm:px-3" id="acordionSvelte">
            <h2 class="text-white text-2xl font-semibold pb-5">Accordions</h2>
           <ComponentsLayout  Component={PrimaryAccordion } Code={primaryAccordionSvelte} Copy={primaryAccordionSvelte}/>
           <ComponentsLayout  Component={SecondaryAccordion } Code={secondaryAccordionSvelte} Copy={secondaryAccordionSvelte}/>
          </section>

          <section class="flex flex-col justify-center max-w-4xl m-auto gap-4 mt-24 max-sm:px-3" id="checkboxSvelte">
            <h2 class="text-white text-2xl font-semibold pb-5">Checkbox</h2>
           <ComponentsLayout  Component={Checkbox} Code={checkboxSvelte} Copy={checkboxSvelte}/>
          </section>
    </section>
</Layout>
